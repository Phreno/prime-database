// Generated by CoffeeScript 1.10.0
(function() {
  var PrimeDatabaseService, chai, constant, expect;

  chai = require('chai');

  expect = chai.expect;

  PrimeDatabaseService = require('../src/PrimeDatabaseService.coffee');

  constant = {
    DATABASE: '../database/data/primeDB.db'
  };

  describe('PrimeDatabaseService', function() {
    var primeDB;
    primeDB = new PrimeDatabaseService(constant.DATABASE);
    return describe('getNth(index)', function() {
      describe('check errors', function() {
        it('should throw ReferenceError if no input', function() {
          expect(primeDB.getNth.bind(primeDB)).to["throw"](ReferenceError);
          return expect(primeDB.getNth.bind(primeDB, "dummy")).to.not["throw"](ReferenceError);
        });
        return it('should throw TypeError if input != number', function() {
          expect(primeDB.getNth.bind(primeDB, "I'm a string")).to["throw"](TypeError);
          return expect(primeDB.getNth.bind(primeDB, 1)).to.not["throw"](TypeError);
        });
      });
      return describe('nominal case', function() {
        it('should work with an object when indice is provided', function() {
          var testCallback;
          testCallback = function(row) {
            expect(row).to.be.an('object');
            expect(row).to.have.property('rowid');
            return expect(row).to.have.property('value');
          };
          return primeDB.getNth(1, testCallback);
        });
        it('should have rowid=indice', function() {
          var indice, testCallback;
          indice = 23;
          testCallback = function(row) {
            return expect(row.rowid).to.equal(indice);
          };
          return primeDB.getNth(indice, testCallback);
        });
        it('when indice=1, then value=2', function() {
          var testCallback;
          testCallback = function(row) {
            return expect(row.value).to.equal(2);
          };
          return primeDB.getNth(1, testCallback);
        });
        return it('when indice=2, then value=3', function() {
          var testCallback;
          testCallback = function(row) {
            return expect(row.value).to.equal(3);
          };
          return primeDB.getNth(2, testCallback);
        });
      });
    });
  });

}).call(this);
